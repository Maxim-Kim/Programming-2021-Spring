#include <stdio.h>
#include <stdlib.h>
#include <time.h>
//----------------------------------------------------------
void menu(int *A, int N)
{
    printf("\n");
    printf("What do you want to do?\n");
    printf("1) Remove all even numbers\n");
    printf("2) Find max and min\n");
    printf("3) Reverse an array\n");
    printf("4) Binary search\n");
    printf(">>> ");
    int variant;
    scanf("%d\n", &variant);
    switch(variant)
    {
        case 1:
            remove_(A, N);
            break;
        case 2:
            find(A, N);
            break;
        case 3:
            reverse(A, N);
            break;
        case 4:
            binary_search(A, N);
            break;
        default:
            printf("Error!");
    }
    return 0;
}
//----------------------------------------------------------
void remove_(int *A, int N)
{
    int count = 0;
    int i;
    int j = 0;
    for (i = 0; i < N; i++)
    {
        if (A[i]%2 != 0)
        {
            count++;
        }
    }
    int B[count];
    for (i = 0; i < N; i++)
    {
        if (A[i]%2 != 0)
        {
            B[j] = A[i];
            j++;
        }
    }
    printf("Sorted array without even numbers >>> ");
    for (j = 0; j < count; j++)
    {
        printf("%d ", B[j]);
    }
    return 0;
}
//----------------------------------------------------------
void find(int *A, int N)
{
    printf("max >>> %d\n", A[N-1]);
    printf("min >>> %d\n", A[0]);
    return 0;
}
//----------------------------------------------------------
void reverse(int *A, int N)
{
    int j;
    int i;
    for (i = 0, j = N - 1; i <= N/2, j >= N/2; i++, j--)
    {
        int t = A[i];
        A[i] = A[j];
        A[j] = t;
    }
    printf("Reversed array >>> ");
    for (i = 0; i < N; i++)
    {
        printf("%d ", A[i]);
    }
    return 0;
}
//----------------------------------------------------------
void binary_search(int *A, int N)
{
    int i;
    int num;
    printf("Which number do you want to find? >>> ");
    scanf("%d\n", &num);
    int right = N;
    int left = 0;
    while (left <= right)
    {
        int middle = (right + left)/2;
        printf("\n");
        printf("%d\n", A[middle]);
        if (A[middle] == num)
        {
            printf("Index of number %d >>> %d", num, middle);
            break;
        }
        else if (num > A[middle])
        {
            left = middle + 1;
            //printf("right");
        }
        else if (num < A[middle])
        {
            right = middle - 1;
            //printf("left");
        }
    }
    return 0;
}
//----------------------------------------------------------
int main()
{
    int N;
    int i;
    printf("Input length of array >>> ");
    scanf("%d", &N);
    int A[N];
    srand(time(NULL));
    printf("Unsorted array >>> ");
    for (i = 0; i < N; i++)
    {
        A[i] = rand()%101;
        printf("%d ", A[i]);
    }
    printf("\n");
    printf("Sorted array >>> ");
    for (i = 0; i < N; i++)
    {
        if (A[i] > A[i+1])
        {
            int t = A[i];
            A[i] = A[i+1];
            A[i+1] = t;
            i = -1;
        }
    }
    for (i = 0; i < N; i++)
    {
        printf("%d ", A[i]);
    }
    printf("\n");
    menu(A, N);
    return 0;
}
